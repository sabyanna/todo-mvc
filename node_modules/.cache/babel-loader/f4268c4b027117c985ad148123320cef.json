{"ast":null,"code":"var _jsxFileName = \"/home/anna/CX-ray/todo-mvc/src/components/TodoList.js\";\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport TodoItem from './TodoItem';\nimport { setTodoListByFilter } from '../utils/filterUtils';\n\nconst TodoList = () => {\n  const todos = useSelector(state => state.todos);\n  const [isOpen, setIsOpen] = useState(true);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsOpen(!isOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, isOpen ? 'hide' : 'show', \" \"), isOpen && todos.map(todo => /*#__PURE__*/React.createElement(TodoItem, {\n    todoItem: todo,\n    key: todo.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default TodoList;","map":{"version":3,"sources":["/home/anna/CX-ray/todo-mvc/src/components/TodoList.js"],"names":["React","useState","useSelector","TodoItem","setTodoListByFilter","TodoList","todos","state","isOpen","setIsOpen","map","todo","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,mBAAT,QAAoC,sBAApC;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,KAAK,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAzB;AACA,QAAM,CAAEE,MAAF,EAAUC,SAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AAEA,sBACE,uDACE;AAAQ,IAAA,OAAO,EAAG,MAAMQ,SAAS,CAAC,CAACD,MAAF,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6CA,MAAM,GAAG,MAAH,GAAY,MAA/D,MADF,EAEIA,MAAM,IACJF,KAAK,CAACI,GAAN,CAAUC,IAAI,iBACZ,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAGA,IAArB;AAA4B,IAAA,GAAG,EAAGA,IAAI,CAACC,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHN,CADF;AASD,CAbD;;AAeA,eAAeP,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport TodoItem from './TodoItem';\nimport { setTodoListByFilter } from '../utils/filterUtils'\n\nconst TodoList = () => {\n  const todos = useSelector(state => state.todos);\n  const [ isOpen, setIsOpen ] = useState(true)\n\n  return (\n    <>\n      <button onClick={ () => setIsOpen(!isOpen)}>{isOpen ? 'hide' : 'show' } </button>\n      { isOpen && \n          todos.map(todo => (\n            <TodoItem todoItem={ todo } key={ todo.id }/>\n      ))}\n    </>\n  );\n};\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}