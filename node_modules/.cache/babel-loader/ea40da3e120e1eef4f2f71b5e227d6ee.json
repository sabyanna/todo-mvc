{"ast":null,"code":"import { SET_FILTERS, CLEAR_FILTER } from '../actions/filters';\nexport const todos = (state = [], action) => {\n  switch (action.type) {\n    case SET_FILTER:\n      return [...state, {\n        id: state.length,\n        name: action.payload,\n        isDone: false\n      }];\n\n    case CLEAR_FILTER:\n      const index = state.findIndex(todo => todo.id === action.payload.id);\n      return [...state.slice(0, index), action.payload, ...state.slice(index + 1, state.length)];\n\n    case DELETE_TODO:\n      return state.filter(todo => todo.id !== action.payload);\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/anna/CX-ray/todo-mvc/src/reducers/filters.js"],"names":["SET_FILTERS","CLEAR_FILTER","todos","state","action","type","SET_FILTER","id","length","name","payload","isDone","index","findIndex","todo","slice","DELETE_TODO","filter"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,YAAtB,QAA0C,oBAA1C;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKC,UAAL;AACE,aAAO,CAAC,GAAGH,KAAJ,EAAW;AAAEI,QAAAA,EAAE,EAAEJ,KAAK,CAACK,MAAZ;AAAoBC,QAAAA,IAAI,EAAEL,MAAM,CAACM,OAAjC;AAA0CC,QAAAA,MAAM,EAAE;AAAlD,OAAX,CAAP;;AACF,SAAKV,YAAL;AACE,YAAMW,KAAK,GAAGT,KAAK,CAACU,SAAN,CAAgBC,IAAI,IAChCA,IAAI,CAACP,EAAL,KAAYH,MAAM,CAACM,OAAP,CAAeH,EADf,CAAd;AAEA,aAAO,CACL,GAAGJ,KAAK,CAACY,KAAN,CAAY,CAAZ,EAAeH,KAAf,CADE,EAELR,MAAM,CAACM,OAFF,EAGL,GAAGP,KAAK,CAACY,KAAN,CAAYH,KAAK,GAAG,CAApB,EAAuBT,KAAK,CAACK,MAA7B,CAHE,CAAP;;AAKF,SAAKQ,WAAL;AACE,aAAOb,KAAK,CAACc,MAAN,CAAaH,IAAI,IAAIA,IAAI,CAACP,EAAL,KAAYH,MAAM,CAACM,OAAxC,CAAP;;AACF;AACE,aAAOP,KAAP;AAdJ;AAgBD,CAjBM","sourcesContent":["import { SET_FILTERS, CLEAR_FILTER } from '../actions/filters';\n\nexport const todos = (state = [], action) => {\n  switch (action.type) {\n    case SET_FILTER:\n      return [...state, { id: state.length, name: action.payload, isDone: false } ];\n    case CLEAR_FILTER:\n      const index = state.findIndex(todo =>\n        todo.id === action.payload.id);\n      return [\n        ...state.slice(0, index),\n        action.payload,\n        ...state.slice(index + 1, state.length)\n      ];\n    case DELETE_TODO:\n      return state.filter(todo => todo.id !== action.payload);\n    default:\n      return state;\n  }\n};"]},"metadata":{},"sourceType":"module"}