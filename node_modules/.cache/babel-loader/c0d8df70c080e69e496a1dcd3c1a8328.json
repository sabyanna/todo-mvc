{"ast":null,"code":"import { ADD_TODO } from '../actions/todos';\nexport const objectives = (state = [], action) => {\n  switch (action.type) {\n    case FETCH_OBJECTIVES:\n      return action.payload;\n\n    case REMOVE_OBJECTIVE:\n      return state.filter(objective => objective.objective_id !== action.payload);\n\n    case EDIT_OBJECTIVE:\n      const index = state.findIndex(objective => objective.objective_id === action.payload.objective_id);\n      return [...state.slice(0, index), action.payload, ...state.slice(index + 1, state.length)];\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/anna/CX-ray/todo-mvc/src/reducers/todos.js"],"names":["ADD_TODO","objectives","state","action","type","FETCH_OBJECTIVES","payload","REMOVE_OBJECTIVE","filter","objective","objective_id","EDIT_OBJECTIVE","index","findIndex","slice","length"],"mappings":"AAAA,SAASA,QAAT,QACO,kBADP;AAGA,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKC,gBAAL;AACE,aAAOF,MAAM,CAACG,OAAd;;AACF,SAAKC,gBAAL;AACE,aAAOL,KAAK,CAACM,MAAN,CAAaC,SAAS,IAAIA,SAAS,CAACC,YAAV,KAA2BP,MAAM,CAACG,OAA5D,CAAP;;AACF,SAAKK,cAAL;AACE,YAAMC,KAAK,GAAGV,KAAK,CAACW,SAAN,CAAgBJ,SAAS,IACrCA,SAAS,CAACC,YAAV,KAA2BP,MAAM,CAACG,OAAP,CAAeI,YAD9B,CAAd;AAEA,aAAO,CACL,GAAGR,KAAK,CAACY,KAAN,CAAY,CAAZ,EAAeF,KAAf,CADE,EAELT,MAAM,CAACG,OAFF,EAGL,GAAGJ,KAAK,CAACY,KAAN,CAAYF,KAAK,GAAG,CAApB,EAAuBV,KAAK,CAACa,MAA7B,CAHE,CAAP;;AAKF;AACE,aAAOb,KAAP;AAdJ;AAgBD,CAjBM","sourcesContent":["import { ADD_TODO }\n  from '../actions/todos';\n\nexport const objectives = (state = [], action) => {\n  switch (action.type) {\n    case FETCH_OBJECTIVES:\n      return action.payload;\n    case REMOVE_OBJECTIVE:\n      return state.filter(objective => objective.objective_id !== action.payload);\n    case EDIT_OBJECTIVE:\n      const index = state.findIndex(objective =>\n        objective.objective_id === action.payload.objective_id);\n      return [\n        ...state.slice(0, index),\n        action.payload,\n        ...state.slice(index + 1, state.length)\n      ];\n    default:\n      return state;\n  }\n};"]},"metadata":{},"sourceType":"module"}