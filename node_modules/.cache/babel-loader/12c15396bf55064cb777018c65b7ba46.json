{"ast":null,"code":"var _jsxFileName = \"/home/anna/CX-ray/todo-mvc/src/components/TodoItem.js\";\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { editTodo } from '../actions/todos';\n\nconst TodoList = ({\n  todoItem\n}) => {\n  const [todo, setTodo] = useState(todoItem);\n  const dispatch = useDispatch();\n\n  const onChangeCheckBox = () => {\n    dispatch(editTodo({ ...todo,\n      isDone: !todo.isDone\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onChange: onChangeCheckBox,\n    value: todo.isDone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, todo.name));\n};\n\nexport default TodoList;","map":{"version":3,"sources":["/home/anna/CX-ray/todo-mvc/src/components/TodoItem.js"],"names":["React","useState","useDispatch","editTodo","TodoList","todoItem","todo","setTodo","dispatch","onChangeCheckBox","isDone","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACjC,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBN,QAAQ,CAACI,QAAD,CAAlC;AAEA,QAAMG,QAAQ,GAAGN,WAAW,EAA5B;;AAEA,QAAMO,gBAAgB,GAAG,MAAM;AAC7BD,IAAAA,QAAQ,CAACL,QAAQ,CAAC,EAAC,GAAGG,IAAJ;AAAUI,MAAAA,MAAM,EAAE,CAACJ,IAAI,CAACI;AAAxB,KAAD,CAAT,CAAR;AACD,GAFD;;AAIA,sBACE,uDACE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,QAAQ,EAAGD,gBAAlC;AAAqD,IAAA,KAAK,EAAGH,IAAI,CAACI,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,IAAI,CAACK,IAAV,CAFF,CADF;AAMD,CAfD;;AAiBA,eAAeP,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { editTodo } from '../actions/todos';\n\nconst TodoList = ({ todoItem }) => {\n  const [ todo, setTodo ] = useState(todoItem);\n\n  const dispatch = useDispatch();\n\n  const onChangeCheckBox = () => {\n    dispatch(editTodo({...todo, isDone: !todo.isDone}))\n  }\n\n  return (\n    <>\n      <input type=\"checkbox\" onChange={ onChangeCheckBox } value={ todo.isDone }></input>\n      <p>{ todo.name }</p>\n    </>\n  );\n};\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}