{"ast":null,"code":"var _jsxFileName = \"/home/anna/CX-ray/todo-mvc/src/components/Filters.js\";\nimport React from 'react';\nimport setFilter from './setFilter';\nimport { useDispatch } from 'react-redux';\n\nconst Filters = () => {\n  const dispatch = useDispatch();\n\n  const handleFilter = filter => {\n    dispatch(setFilter(filter));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleFilter('all'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleFilter('active'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"Active\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleFilter('done'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"Done\"));\n};\n\nexport default Filters;","map":{"version":3,"sources":["/home/anna/CX-ray/todo-mvc/src/components/Filters.js"],"names":["React","setFilter","useDispatch","Filters","dispatch","handleFilter","filter"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAMC,QAAQ,GAAGF,WAAW,EAA5B;;AAEA,QAAMG,YAAY,GAAGC,MAAM,IAAI;AAC7BF,IAAAA,QAAQ,CAACH,SAAS,CAACK,MAAD,CAAV,CAAR;AACD,GAFD;;AAGA,sBACE,uDACE;AAAQ,IAAA,OAAO,EAAG,MAAMD,YAAY,CAAC,KAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,eAEE;AAAQ,IAAA,OAAO,EAAG,MAAMA,YAAY,CAAC,QAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,IAAA,OAAO,EAAG,MAAMA,YAAY,CAAC,MAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,CADF;AAOD,CAbD;;AAeA,eAAeF,OAAf","sourcesContent":["import React from 'react';\nimport setFilter from './setFilter';\nimport { useDispatch } from 'react-redux';\n\nconst Filters = () => {\n  const dispatch = useDispatch();\n\n  const handleFilter = filter => {\n    dispatch(setFilter(filter));\n  }\n  return (\n    <>\n      <button onClick={ () => handleFilter('all')}>All</button>\n      <button onClick={ () => handleFilter('active')}>Active</button>\n      <button onClick={ () => handleFilter('done')}>Done</button>\n    </>\n  );\n};\n\nexport default Filters;\n"]},"metadata":{},"sourceType":"module"}